
DROP TABLE HR.RAISE_HISTORY;

CREATE TABLE HR.RAISE_HISTORY
(
  RAISE_HISTORY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  EMPLOYEE_ID      NUMBER(6) NOT NULL,
  RAISE_DATE       DATE CONSTRAINT RAISE_DATE_NN NOT NULL,
  SALARY           NUMBER(8,2) NOT NULL,
  primary key (RAISE_HISTORY_ID)
);
/
alter table hr.raise_history add constraint raise_fk foreign key(employee_id) references EMPLOYEES(EMPLOYEE_ID);

CREATE OR REPLACE PROCEDURE HR.add_salary_history
  (  p_emp_id          raise_history.employee_id%type
   , p_raise_date      raise_history.raise_date%type
   , p_salary        raise_history.salary%type
   )
IS
BEGIN
  INSERT INTO raise_history (employee_id, raise_date, salary)
    VALUES(p_emp_id, p_raise_date, p_salary);
END add_salary_history;
/

DROP TRIGGER HR.UPDATE_SALARY_HISTORY;

CREATE OR REPLACE TRIGGER HR.update_SALARY_history
  AFTER UPDATE OF salary ON HR.EMPLOYEES
  FOR EACH ROW
BEGIN
  add_salary_history(:old.employee_id, sysdate,:old.salary);
END;
/

UPDATE hr.employees
SET salary = 8700
where employee_id = 206;


select employee_id, salary from employees;

select * from raise_history; 

